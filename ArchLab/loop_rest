#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-8, %rdx
	jl rest		#should always taken (since average MATTERS)

Loop:	mrmovq (%rdi), %r8	#load_adventure_here
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10	#load_adventure_here
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12	#load_adventure_here
	mrmovq 40(%rdi), %r13
	mrmovq 48(%rdi), %r14	#load_adventure_here
	mrmovq 56(%rdi), %rbx
	
	rmmovq %r8, (%rsi)	# ...and store it to dst
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)	# ...and store it to dst
	rmmovq %r11, 24(%rsi)
	rmmovq %r12, 32(%rsi)	# ...and store it to dst
	rmmovq %r13, 40(%rsi)
	rmmovq %r14, 48(%rsi)	# ...and store it to dst
	rmmovq %rbx, 56(%rsi)
	
	andq %r8, %r8
	jle Npos1_0		# 50/50, doesn't matter
	iaddq $1, %rax		# count++

Npos1_0:	
	andq %r9, %r9
	jle Npos1_1
	iaddq $1, %rax
	
Npos1_1:
	andq %r10, %r10
	jle Npos1_2
	iaddq $1, %rax
Npos1_2:
	andq %r11, %r11
	jle Npos1_3
	iaddq $1, %rax	

Npos1_3:	
	andq %r12, %r12
	jle Npos1_4
	iaddq $1, %rax
	
Npos1_4:
	andq %r13, %r13
	jle Npos1_5
	iaddq $1, %rax
	
Npos1_5:
	andq %r14, %r14
	jle Npos1_6
	iaddq $1, %rax
Npos1_6:
	andq %rbx, %rbx
	jle update
	iaddq $1, %rax

update:
	iaddq $64, %rdi		
	iaddq $64, %rsi
test:
	iaddq $-8, %rdx
	jge Loop	#should always taken

rest:
	iaddq $8, %rdx
	jne test_tmp		#BEST optimization EVER!!!
done_tmp:
	ret
test_tmp:
	mrmovq (%rdi), %r8
	andq %r8, %r8
	rmmovq %r8, (%rsi)
	jle test_rest		#50/50
	iaddq $1, %rax
	
test_rest:
	andq %rdx, %rdx
	iaddq $8, %rdi
	iaddq $8, %rsi
	iaddq $-1, %rdx
	jne test_tmp
done:
	ret
	
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */